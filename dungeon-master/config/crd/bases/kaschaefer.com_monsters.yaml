---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: monsters.kaschaefer.com
spec:
  group: kaschaefer.com
  names:
    kind: Monster
    listKind: MonsterList
    plural: monsters
    singular: monster
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Monster is the Schema for the monsters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MonsterSpec defines the desired state of Monster.
            properties:
              health:
                description: Health of the monster.
                type: integer
              id:
                description: Unique identifier for the monster.
                type: integer
              name:
                description: Name of the monster.
                type: string
              type:
                description: Type of the monster (e.g., "bloat", "goblin").
                type: string
            type: object
          status:
            description: MonsterStatus defines the observed state of Monster.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
